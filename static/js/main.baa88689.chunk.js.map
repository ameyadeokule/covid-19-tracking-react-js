{"version":3,"sources":["components/Infobox/index.js","components/Table/index.js","components/Graph/index.js","utils/index.js","App.js","index.js"],"names":["InfoBox","title","active","cases","total","isRed","Card","className","CardContent","Typography","color","gutterBottom","Table","states","map","state","name","numeral","positiveCases","format","Graph","statesData","seriesData","console","log","series","data","options","colors","chart","height","zoom","enabled","type","toolbar","show","xaxis","categories","labels","style","fontSize","tickAmount","tickPlacement","yaxis","markers","strokeWidth","legend","sortData","sortedData","sort","a","b","prettyPrintStat","stat","App","useState","PositiveCases","Recovered","TotalTested","countryData","setCountryData","setStatesData","useEffect","fetch","then","response","json","recovered","tests","getCountryData","getStateData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa88689.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport './InfoBox.css'\n\nfunction InfoBox({ title, cases, active, total, isRed, ...props }) {\n\treturn (\n\t\t<Card\n\t\t\tclassName={`infoBox ${active && 'infoBox--selected'} ${\n\t\t\t\tisRed && 'infoBox--red'\n\t\t\t}`}>\n\t\t\t<CardContent>\n\t\t\t\t<Typography color='textSecondary' gutterBottom>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<h2\n\t\t\t\t\tclassName={`infoBox__cases ${\n\t\t\t\t\t\t!isRed && 'infoBox__cases--green'\n\t\t\t\t\t}`}>\n\t\t\t\t\t{total}\n\t\t\t\t</h2>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n}\n\nexport default InfoBox\n","import React from 'react'\nimport './Table.css'\nimport numeral from 'numeral'\n\nfunction Table({ states }) {\n\treturn (\n\t\t<table className='table'>\n\t\t\t{states.map((state) => (\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{state.name}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{numeral(state.positiveCases).format('0,0')}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t))}\n\t\t</table>\n\t)\n}\n\nexport default Table\n","import React from 'react'\nimport ReactApexCharts from 'react-apexcharts'\nimport './Graph.css'\n\nfunction Graph({ statesData }) {\n\tconst seriesData = statesData.map((state) => state.positiveCases)\n\n\tconsole.log(seriesData)\n\n\tconst seriesCategories = statesData.map((state) => state.name)\n\n\tconst series = [\n\t\t{\n\t\t\tname: 'Total Cases',\n\t\t\tdata: seriesData,\n\t\t},\n\t]\n\n\tconst options = {\n\t\tcolors: ['#28C76F'],\n\t\tchart: {\n\t\t\theight: 400,\n\t\t\tzoom: {\n\t\t\t\tenabled: true,\n\t\t\t\ttype: 'xy',\n\t\t\t},\n\t\t\ttoolbar: {\n\t\t\t\tshow: true,\n\t\t\t},\n\t\t},\n\n\t\txaxis: {\n\t\t\ttype: 'category',\n\t\t\tcategories: seriesCategories,\n\t\t\tlabels: {\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: '10px',\n\t\t\t\t},\n\t\t\t},\n\t\t\ttickAmount: 7,\n\t\t\ttickPlacement: 'between',\n\t\t},\n\t\tyaxis: {\n\t\t\ttickAmount: 7,\n\t\t},\n\t\tmarkers: {\n\t\t\tstrokeWidth: 0,\n\t\t},\n\t\tlegend: {\n\t\t\tshow: false,\n\t\t},\n\t}\n\n\treturn (\n\t\t<ReactApexCharts\n\t\t\tclassName='map'\n\t\t\toptions={options}\n\t\t\ttype='scatter'\n\t\t\tseries={series}\n\t\t\theight={400}\n\t\t/>\n\t)\n}\n\nexport default Graph\n","import numeral from 'numeral'\n\nexport const sortData = (data) => {\n\tlet sortedData = [...data]\n\tsortedData.sort((a, b) => {\n\t\tif (a.positiveCases > b.positiveCases) {\n\t\t\treturn -1\n\t\t} else {\n\t\t\treturn 1\n\t\t}\n\t})\n\treturn sortedData\n}\n\nexport const prettyPrintStat = (stat) =>\n\tstat ? `+${numeral(stat).format('0.0a')}` : '+0'\n","import { useEffect, useState } from 'react'\nimport numeral from 'numeral'\nimport { Card, CardContent } from '@material-ui/core'\nimport './App.css'\nimport InfoBox from './components/Infobox'\nimport Table from './components/Table'\nimport Graph from './components/Graph'\nimport { sortData, prettyPrintStat } from './utils'\n\nfunction App() {\n\tconst [countryData, setCountryData] = useState({\n\t\tPositiveCases: '',\n\t\tRecovered: '',\n\t\tTotalTested: '',\n\t})\n\n\tconst [statesData, setStatesData] = useState([])\n\n\tuseEffect(() => {\n\t\tconst getCountryData = async () => {\n\t\t\tawait fetch(\n\t\t\t\t'https://covid-19-tracker-backend.herokuapp.com/api/country',\n\t\t\t)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetCountryData({\n\t\t\t\t\t\tPositiveCases: data.active,\n\t\t\t\t\t\tRecovered: data.recovered,\n\t\t\t\t\t\tTotalTested: data.tests,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t\tgetCountryData()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst getStateData = async () => {\n\t\t\tawait fetch(\n\t\t\t\t'https://covid-19-tracker-backend.herokuapp.com/api/states\t',\n\t\t\t)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tlet sortedData = sortData(data)\n\t\t\t\t\tsetStatesData(sortedData)\n\t\t\t\t})\n\t\t}\n\t\tgetStateData()\n\t}, [])\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<div className='app__left'>\n\t\t\t\t<div className='app__header'>\n\t\t\t\t\t<h1>US COVID-19 Tracker</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className='app__stats'>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle='Active Cases'\n\t\t\t\t\t\tisRed\n\t\t\t\t\t\tactive='Total Active Cases'\n\t\t\t\t\t\tcases={prettyPrintStat(countryData.PositiveCases)}\n\t\t\t\t\t\ttotal={numeral(countryData.PositiveCases).format(\n\t\t\t\t\t\t\t'0.0a',\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle='Recovered'\n\t\t\t\t\t\tactive=' Total Recovered'\n\t\t\t\t\t\tcases={prettyPrintStat(countryData.Recovered)}\n\t\t\t\t\t\ttotal={numeral(countryData.Recovered).format('0.0a')}\n\t\t\t\t\t/>\n\t\t\t\t\t<InfoBox\n\t\t\t\t\t\ttitle='Total Tests Administered'\n\t\t\t\t\t\tactive='Total Tested'\n\t\t\t\t\t\tcases={prettyPrintStat(countryData.TotalTested)}\n\t\t\t\t\t\ttotal={numeral(countryData.TotalTested).format('0.0a')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Graph statesData={statesData} />\n\t\t\t</div>\n\t\t\t<Card className='app__right'>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<div className='app__information'>\n\t\t\t\t\t\t<h3>Total Cases by States</h3>\n\t\t\t\t\t\t<Table states={statesData} />\n\t\t\t\t\t</div>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}